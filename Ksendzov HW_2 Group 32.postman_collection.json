{
	"info": {
		"_postman_id": "b1973163-9098-44ff-9065-a89a8133435b",
		"name": "Ksendzov HW Group 32",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25078216"
	},
	"item": [
		{
			"name": "/",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{ip_port}}/",
					"host": [
						"{{ip_port}}"
					],
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "get_method",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{ip_port}}/get_method?name=Alexey&age={{age}}",
					"host": [
						"{{ip_port}}"
					],
					"path": [
						"get_method"
					],
					"query": [
						{
							"key": "name",
							"value": "Alexey"
						},
						{
							"key": "age",
							"value": "{{age}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{ip_port}}/object_info_1?name=Alexey&age={{age}}&weight=100",
					"host": [
						"{{ip_port}}"
					],
					"path": [
						"object_info_1"
					],
					"query": [
						{
							"key": "name",
							"value": "Alexey"
						},
						{
							"key": "age",
							"value": "{{age}}"
						},
						{
							"key": "weight",
							"value": "100"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{ip_port}}/object_info_2?name=Alexey&age={{age}}&salary=100000",
					"host": [
						"{{ip_port}}"
					],
					"path": [
						"object_info_2"
					],
					"query": [
						{
							"key": "name",
							"value": "Alexey"
						},
						{
							"key": "age",
							"value": "{{age}}"
						},
						{
							"key": "salary",
							"value": "100000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let resp_f = pm.response.json()\r",
							"let req_f = pm.request.url.query.toObject()\r",
							"\r",
							"console.log(resp_f)\r",
							"console.log(req_f)\r",
							"console.log(\"------------------------------------------\")\r",
							"\r",
							"\r",
							"pm.test(\"Check name\", function () {\r",
							"    pm.expect(resp_f.name).to.eql(req_f.name);\r",
							"});\r",
							"\r",
							"pm.test(\"Check age\", function () {\r",
							"    pm.expect(resp_f.age).to.eql(+req_f.age);\r",
							"});\r",
							"\r",
							"console.log(\"Salary from request: \" + req_f.salary)\r",
							"console.log(\"Salary from response: \" + resp_f.salary)\r",
							"console.log(\"Salary [0] from response: \" + resp_f.salary[0])\r",
							"console.log(\"Salary [1] from response: \" + resp_f.salary[1])\r",
							"console.log(\"Salary [2] from response: \" + resp_f.salary[2])\r",
							"\r",
							"pm.test(\"Check Salary\", function () {\r",
							"    pm.expect(resp_f.salary[0]).to.eql(+req_f.salary);\r",
							"});\r",
							"\r",
							"pm.test(\"Check Salary*2\", function () {\r",
							"    pm.expect(+resp_f.salary[1]).to.eql(req_f.salary * 2);\r",
							"});\r",
							"\r",
							"pm.test(\"Check Salary*3\", function () {\r",
							"    pm.expect(+resp_f.salary[2]).to.eql(req_f.salary * 3);\r",
							"});\r",
							"\r",
							"pm.environment.set(\"name\", req_f.name)\r",
							"pm.environment.set(\"age\", +req_f.age)\r",
							"pm.environment.set(\"salary\", req_f.salary)\r",
							"\r",
							"for (let s of resp_f.salary) {\r",
							"  console.log(s);\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "{{ip_port}}/object_info_4?name=Alexey&age={{age}}&salary=100000",
					"host": [
						"{{ip_port}}"
					],
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Alexey"
						},
						{
							"key": "age",
							"value": "{{age}}"
						},
						{
							"key": "salary",
							"value": "100000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let resp_f = pm.response.json()\r",
							"let req_f = pm.request.url.query.toObject()\r",
							"\r",
							"console.log(resp_f)\r",
							"console.log(req_f)\r",
							"console.log(\"------------------------------------------\")\r",
							"\r",
							"\r",
							"pm.test(\"Check name\", function () {\r",
							"    pm.expect(resp_f.name).to.eql(req_f.name);\r",
							"});\r",
							"\r",
							"pm.test(\"Check age\", function () {\r",
							"    pm.expect(resp_f.age).to.eql(req_f.age);\r",
							"});\r",
							"\r",
							"pm.test(\"Check salary\", function () {\r",
							"    pm.expect(resp_f.salary).to.eql(+req_f.salary);\r",
							"});\r",
							"\r",
							"console.log(\"Family from response: \" + JSON.stringify(resp_f.family))\r",
							"\r",
							"pm.test(\"Have 'name' property in 'dog'\", function () {\r",
							"    pm.expect(resp_f.family.pets.dog).to.have.property(\"name\");\r",
							"});\r",
							"\r",
							"pm.test(\"Have 'age' property in 'dog'\", function () {\r",
							"    pm.expect(resp_f.family.pets.dog).to.have.property(\"age\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check dog name\", function () {\r",
							"    pm.expect(resp_f.family.pets.dog.name).to.eql(\"Luky\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check dog name\", function () {\r",
							"    pm.expect(resp_f.family.pets.dog.age).to.eql(4);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "{{ip_port}}/object_info_3?name=Alexey&age={{age}}&salary=100000",
					"host": [
						"{{ip_port}}"
					],
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Alexey"
						},
						{
							"key": "age",
							"value": "{{age}}"
						},
						{
							"key": "salary",
							"value": "100000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.body(\"This is the first responce from server!ss\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "{{ip_port}}/first",
					"host": [
						"{{ip_port}}"
					],
					"path": [
						"first"
					],
					"query": [
						{
							"key": "name",
							"value": "Alexey",
							"disabled": true
						},
						{
							"key": "age",
							"value": "{{age}}",
							"disabled": true
						},
						{
							"key": "salary",
							"value": "100000",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let req_f = request.data\r",
							"let resp_f = pm.response.json()\r",
							"\r",
							"console.log(req_f)\r",
							"console.log(resp_f)\r",
							"\r",
							"pm.test(\"Have start_qa_salary\", function () {\r",
							"    pm.expect(resp_f).to.have.property(\"start_qa_salary\");\r",
							"});\r",
							"\r",
							"pm.test(\"Have qa_salary_after_6_months\", function () {\r",
							"    pm.expect(resp_f).to.have.property(\"qa_salary_after_6_months\");\r",
							"});\r",
							"\r",
							"pm.test(\"Have qa_salary_after_12_months\", function () {\r",
							"    pm.expect(resp_f).to.have.property(\"qa_salary_after_12_months\");\r",
							"});\r",
							"\r",
							"pm.test(\"Have qa_salary_after_1.5_year\", function () {\r",
							"    pm.expect(resp_f).to.have.property(\"qa_salary_after_1.5_year\");\r",
							"});\r",
							"\r",
							"pm.test(\"Have qa_salary_after_3.5_years\", function () {\r",
							"    pm.expect(resp_f).to.have.property(\"qa_salary_after_3.5_years\");\r",
							"});\r",
							"\r",
							"pm.test(\"Have person\", function () {\r",
							"    pm.expect(resp_f).to.have.property(\"person\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check start_qa_salary\", function () {\r",
							"    pm.expect(resp_f.start_qa_salary).to.eql(+req_f.salary);\r",
							"});\r",
							"\r",
							"pm.test(\"Check qa_salary_after_6_months\", function () {\r",
							"    pm.expect(resp_f.qa_salary_after_6_months).to.eql(+req_f.salary * 2);\r",
							"});\r",
							"\r",
							"pm.test(\"Check qa_salary_after_12_months\", function () {\r",
							"    pm.expect(resp_f.qa_salary_after_12_months).to.eql(+req_f.salary * 2.7);\r",
							"});\r",
							"\r",
							"pm.test(\"Check qa_salary_after_1.5_year\", function () {\r",
							"    pm.expect(resp_f[\"qa_salary_after_1.5_year\"]).to.eql(+req_f.salary * 3.3);\r",
							"});\r",
							"\r",
							"pm.test(\"Check qa_salary_after_3.5_year\", function () {\r",
							"    pm.expect(resp_f[\"qa_salary_after_3.5_years\"]).to.eql(+req_f.salary * 3.8);\r",
							"});\r",
							"\r",
							"pm.test(\"Check u_name[1]\", function () {\r",
							"    pm.expect(resp_f.person.u_name[1]).to.eql(+req_f.salary);\r",
							"});\r",
							"\r",
							"pm.test(\"Check age\", function () {\r",
							"    pm.expect(resp_f.person.u_age).to.eql(+req_f.age);\r",
							"});\r",
							"\r",
							"pm.test(\"Check u_salary_5_years\", function () {\r",
							"    pm.expect(resp_f.person.u_salary_5_years).to.eql(+req_f.salary * 4.2);\r",
							"});\r",
							"\r",
							"for (key in resp_f.person) {\r",
							"  console.log(\"Key: \" + key + \", Value: \" + resp_f.person[key]);\r",
							"}\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{ip_port}}/user_info_2",
					"host": [
						"{{ip_port}}"
					],
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let resp_f = pm.response.json()\r",
							"let req_f = request.data\r",
							"\r",
							"\r",
							"console.log(resp_f)\r",
							"console.log(req_f)\r",
							"console.log(resp_f.family)\r",
							"\r",
							"\r",
							"\r",
							"pm.test(\"Check name in response\", function () {\r",
							"    pm.expect(resp_f.name).to.eql(\"Alexey\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check age in response\", function () {\r",
							"    pm.expect(+resp_f.age).to.eql(39);\r",
							"});\r",
							"\r",
							"pm.test(\"Check salary in response\", function () {\r",
							"    pm.expect(resp_f.salary).to.eql(100000);\r",
							"});\r",
							"\r",
							"pm.test(\"Check name\", function () {\r",
							"    pm.expect(resp_f.name).to.eql(req_f.name);\r",
							"});\r",
							"\r",
							"pm.test(\"Check age\", function () {\r",
							"    pm.expect(resp_f.age).to.eql(req_f.age);\r",
							"});\r",
							"\r",
							"pm.test(\"Check salary\", function () {\r",
							"    pm.expect(resp_f.salary).to.eql(+req_f.salary);\r",
							"});\r",
							"\r",
							"pm.test(\"Check u_salary_1_5_year\", function () {\r",
							"    pm.expect(resp_f.family.u_salary_1_5_year).to.eql(+req_f.salary*4);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Alexey",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "100000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{ip_port}}/user_info_3",
					"host": [
						"{{ip_port}}"
					],
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Status code is 200\", function () {",
					"    pm.response.to.have.status(200);",
					"});"
				]
			}
		}
	]
}